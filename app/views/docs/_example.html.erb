<div id="example">
  <h3 class="sub">Example</h3>
  <p>
    Let's attempt to recreate this chart. Look at the code below!
  </p>

  <div id='chart'></div>
  <%= render_chart @chart, 'chart' %>

  <br/>
  <div class='append-bottom'>
    <hr>
    <h3>Code</h3>
    <div>
      <p>
        In your controller, create the data_table object, set new columns, add row values, then instantiate the chart with configuration options.
      </p>
      <%= codify_ruby do %>
  data_table  = GoogleVisualr::DataTable.new(
    {
      :cols =>  [
        { :id => 'A', :label => 'NEW A'  , :type => 'string' },
        { :id => 'B', :label => 'B-label', :type => 'number' },
        { :id => 'C', :label => 'C-label', :type => 'date'   }
      ],
      :rows =>  [
        { :c => [ {:v => 'a'}, {:v => 1.0, :f => 'One'}  , {:v => Date.parse('2008-02-28 00:31:26'), :f => '2/28/08 12:31 AM'} ] },
        { :c => [ {:v => 'b'}, {:v => 2.0, :f => 'Two'}  , {:v => Date.parse('2008-03-30 00:31:26'), :f => '3/30/08 12:31 AM'} ] },
        { :c => [ {:v => 'c'}, {:v => 3.0, :f => 'Three'}, {:v => Date.parse('2008-04-30 00:31:26'), :f => '4/30/08 12:31 AM'} ] }
      ]
    }
  )

  opts    = { :width => 600, :allowHtml => true, :showRowNumber => true }
  @chart  = GoogleVisualr::Interactive::Table.new(data_table, opts)
      <% end %>
    </div>
    <div>
      <p>
        In your view, use the <em>render_chart</em> method to generate JavaScript, during rendering of the view.
      </p>
      <%= codify_html do %>
  <div id='chart'></div>
  <%%= render_chart @chart, 'chart' %>
      <% end %>
    </div>
  </div>
</div>
