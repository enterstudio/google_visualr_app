<h2>DataTable API Reference - Formatters</h2>

<div class='append-bottom'>
  <hr>
  <h3>Overview</h3>
  <p>
    Formatters can be used to reformat data in a data_table, by changing the display values of the specified column in all rows of the data_table.
  </p>
  <p>
    They only modify the display values; not the underlying values. E.g., displayed value can be "$1,000.00" but the underlying value remains as "1000".
  </p>
  <p>
    Formatters can only affect one column at a time. To reformat multiple columns, apply a formatter to each column that you want to change.
  </p>
  <p>
    Please refer to <%= link_to "Google's Documentation", "http://code.google.com/apis/chart/interactive/docs/reference.html#formatters" %> for more details.
  </p>
</div>

<div class='append-bottom'>
  <hr>
  <h3 >Usage</h3>
  <p>
    Firstly, initialize the required formatter, without (will use default) or with configuration options.
  </p>
  <p>
    <code>
      # Initialize with Width Option
      <br/>
      formatter = GoogleVisualr::BarFormat.new( { :width => 150 } )
    </code>
  </p>
  <p>
    Secondly, set the formatter to format the display values for specified column/s. The <em>columns</em> method is the only public method for a formatter.
  </p>
  <p>
    <code>
      # Apply to 2nd and 3rd Column
      <br/>
      formatter.columns(1,2)
    </code>
  </p>
  <p>
    Finally, pass the formatter as an argument to a data_table's <em>format</em> method. That's all!
  </p>
  <p>
    <code>
      data_table.format(formatter)
    </code>
  </p>
</div>

<div id='arrow_format' class='append-bottom'>
  <h3 class='sub'>google.visualization.ArrowFormat</h3>
  <p>
    Adds an up or down arrow to a numeric cell, depending on whether the value is above or below a specified base value.
  </p>
  <p>
    There is no arrow is shown, when cell value is equal to the base value.
  </p>
</div>
<div class='append-bottom'>
  <hr>
  <h3>Example</h3>
  <div id='chart_1'></div>
  <%= render_chart @chart_1, 'chart_1' %>
</div>
<div class='append-bottom'>
  <hr>
  <h3>Code</h3>
  <div>
    <p>
      In your controller, create your data_table object, then create your formatter and apply it to specific column/s.
    </p>
    <script src="https://gist.github.com/1057977.js?file=controller.rb"></script>
  </div>
  <div>
    <p>
      In your view, use the <em>to_js</em> method to generate JavaScript during rendering of the view.
    </p>
    <script src="https://gist.github.com/1057977.js?file=view.html.erb"></script>
  </div>
</div>

<div id='bar_format' class='append-bottom'>
  <h3 class='sub'>google.visualization.BarFormat</h3>
  <p>
    Adds a colored bar to a numeric cell, indicating whether the cell value is above or below a specified base value.
  </p>
</div>
<div class='append-bottom'>
  <hr>
  <h3>Example</h3>
  <div id='chart_2'></div>
  <%= render_chart @chart_2, 'chart_2' %>
</div>
<div class='append-bottom'>
  <hr>
  <h3>Code</h3>
  <div>
    <p>
      In your controller, create your data_table object, then create your formatter and apply it to specific column/s.
    </p>
    <script src="https://gist.github.com/1057978.js?file=controller.rb"></script>
  </div>
  <div>
    <p>
      In your view, use the <em>to_js</em> method to generate JavaScript during rendering of the view.
    </p>
    <script src="https://gist.github.com/1057978.js?file=view.html.erb"></script>
  </div>
</div>

<div id='color_format' class='append-bottom'>
  <h3 class='sub'>google.visualization.ColorFormat</h3>
  <p>
    Assigns colors (in HTML format, e.g. "black" or "#000") to the foreground or background of a numeric cell, depending on the cell value.
  </p>
  <p>
    This formatter does not accept options in the constructor. Instead, you should call add_range() or add_gradient_range() as many times as you want, to add color ranges, before calling format().
  </p>
</div>
<div class='append-bottom'>
  <hr>
  <h3>Example</h3>
  <div id='chart_3'></div>
  <%= render_chart @chart_3, 'chart_3' %>
</div>
<div class='append-bottom'>
  <hr>
  <h3>Code</h3>
  <div>
    <p>
      In your controller, create your data_table object, then create your formatter and apply it to specific column/s.
    </p>
    <script src="https://gist.github.com/1057980.js?file=controller.rb"></script>
  </div>
  <div>
    <p>
      In your view, use the <em>to_js</em> method to generate JavaScript during rendering of the view.
    </p>
    <script src="https://gist.github.com/1057980.js?file=view.html.erb"></script>
  </div>
</div>

<div id='date_format' class='append-bottom'>
  <h3 class='sub'>google.visualization.DateFormat</h3>
  <p>
    Formats a JavaScript Date value in a variety of ways, including "January 1, 2009," "1/1/09" and "Jan 1, 2009.
  </p>
</div>
<div class='append-bottom'>
  <hr>
  <h3>Example</h3>
  <div id='chart_4'></div>
  <%= render_chart @chart_4, 'chart_4' %>
</div>
<div class='append-bottom'>
  <hr>
  <h3>Code</h3>
  <div>
    <p>
      In your controller, create your data_table object, then create your formatter and apply it to specific column/s.
    </p>
    <script src="https://gist.github.com/1057984.js?file=controller.rb"></script>
  </div>
  <div>
    <p>
      In your view, use the <em>to_js</em> method to generate JavaScript during rendering of the view.
    </p>
    <script src="https://gist.github.com/1057984.js?file=view.html.erb"></script>
  </div>
</div>

<div id='number_format' class='append-bottom'>
  <h3 class='sub'>google.visualization.NumberFormat</h3>
  <p>
    Formatting options for numeric columns include specifying a prefix symbol (such as a $ sign) or the punctuation to use as a thousands marker.
  </p>
</div>
<div class='append-bottom'>
  <hr>
  <h3>Example</h3>
  <div id='chart_5'></div>
  <%= render_chart @chart_5, 'chart_5' %>
</div>
<div class='append-bottom'>
  <hr>
  <h3>Code</h3>
  <div>
    <p>
      In your controller, create your data_table object, then create your formatter and apply it to specific column/s.
    </p>
    <script src="https://gist.github.com/1057985.js?file=controller.rb"></script>
  </div>
  <div>
    <p>
      In your view, use the <em>to_js</em> method to generate JavaScript during rendering of the view.
    </p>
    <script src="https://gist.github.com/1057985.js?file=view.html.erb"></script>
  </div>
</div>