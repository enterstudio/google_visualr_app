<h2>GoogleVisualr - Geo Map</h2>
<div class='append-bottom'>
  <hr>
  <h3>Overview</h3>
  <p>
    A map of a continent, region, or country with colors and values assigned to specific areas. The chart is rendered within the browser using Flash.
  </p>
  <p>
   Values are displayed as a color scale, and you can specify optional hover text for areas.
  </p>
  <p>
    Please refer to <%= link_to "Google's documentation", "http://code.google.com/apis/chart/interactive/docs/gallery/geomap.html" %> for details on <em>Data Format</em> and <em>Configuration Options</em>. However, <em>Methods</em> and <em>Events</em> are not implemented.
  </p>
</div>
<div class='append-bottom'>
  <hr>
  <h3>Example</h3>
  <p>
    We have two examples - the first uses the regions display style, while the second uses the markers display style.
  </p>
  <h4>Regions Example</h4>
  <p>
    The regions style fills entire areas (typically countries) with colors corresponding to the assigned values.
  </p>
  <p>
    Specify the regions style by assigning <span class='cem'><em>options['dataMode'] = 'regions'</em></span> in your code.
  </p>
  <div id='chart_regions'></div>
  <%= render_chart @chart_regions, 'chart_regions' %>
  <br/>
  <h4>Markers Example</h4>
  <p>
    The markers style displays a circle, sized and colored to indicate a value, over the areas that you specify.
  </p>
  <p>
    Specify the regions style by assigning <span class='cem'><em>options['dataMode'] = 'markers'</em></span> in your code.
  </p>
  <div id='chart_markers'></div>
  <%= render_chart @chart_markers, 'chart_markers' %>
</div>
<div class='append-bottom'>
  <hr>
  <h3>Code</h3>
  <div>
    <p>
      In your controller, create the data_table object, set new columns, add row values, then instantiate the chart with configuration options.
    </p>
    <%= codify_ruby do %>
  # http://code.google.com/apis/chart/interactive/docs/gallery/geomap.html#Example
  def geo_map

    # Regions Example
    data_table_regions = GoogleVisualr::DataTable.new
    data_table_regions.new_column('string'  , 'Country'   )
    data_table_regions.new_column('number'  , 'Popularity')
    data_table_regions.add_rows(6)
    data_table_regions.set_cell(0, 0, 'Germany'      )
    data_table_regions.set_cell(0, 1, 200)
    data_table_regions.set_cell(1, 0, 'United States')
    data_table_regions.set_cell(1, 1, 300)
    data_table_regions.set_cell(2, 0, 'Brazil'       )
    data_table_regions.set_cell(2, 1, 400)
    data_table_regions.set_cell(3, 0, 'Canada'       )
    data_table_regions.set_cell(3, 1, 500)
    data_table_regions.set_cell(4, 0, 'France'       )
    data_table_regions.set_cell(4, 1, 600)
    data_table_regions.set_cell(5, 0, 'RU'           )
    data_table_regions.set_cell(5, 1, 700)

    opts   = { :dataMode => 'regions' }
    @chart_regions = GoogleVisualr::Interactive::GeoMap.new(data_table_regions, opts)

    # Markers Example
    data_table_markers = GoogleVisualr::DataTable.new
    data_table_markers.new_column('string'  , 'Country'   )
    data_table_markers.new_column('number'  , 'Popularity')
    data_table_markers.add_rows(6)
    data_table_markers.set_cell(0, 0, 'New York'     )
    data_table_markers.set_cell(0, 1, 200)
    data_table_markers.set_cell(1, 0, 'Boston'       )
    data_table_markers.set_cell(1, 1, 300)
    data_table_markers.set_cell(2, 0, 'Miami'        )
    data_table_markers.set_cell(2, 1, 400)
    data_table_markers.set_cell(3, 0, 'Chicago'      )
    data_table_markers.set_cell(3, 1, 500)
    data_table_markers.set_cell(4, 0, 'Los Angeles'  )
    data_table_markers.set_cell(4, 1, 600)
    data_table_markers.set_cell(5, 0, 'Houston'      )
    data_table_markers.set_cell(5, 1, 700)

    opts   = { :dataMode => 'markers', :region => 'US', :colors => ['0xFF8747', '0xFFB581', '0xc06000'] }
    @chart_markers = GoogleVisualr::Interactive::GeoMap.new(data_table_markers, opts)

  end
    <% end %>
  </div>
  <div>
    <p>
      In your view, use the <em>render_chart</em> method to generate <%= link_to "JavaScript", "http://code.google.com/apis/chart/interactive/docs/gallery/geomap.html#Example" %>, during rendering of the view.
    </p>
    <%= codify_html do %>
  <div id='chart'></div>
  <%%= render_chart @chart, 'chart' %>
    <% end %>
  </div>
</div>
