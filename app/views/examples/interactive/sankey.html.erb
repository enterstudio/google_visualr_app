<h2>GoogleVisualr - Sankey Diagram</h2>
<div class='append-bottom'>
  <hr>
  <h3>Overview</h3>
  <p>
    A sankey diagram is a visualization used to depict a flow from one set of values to another.
  </p>
  <p>
    Sankeys are best used when you want to show a many-to-many mapping between two domains (e.g., universities and majors) or multiple paths through a set of stages (for instance, Google Analytics uses sankeys to show how traffic flows from pages to other pages on your web site).
  </p>
  <p>
    Please refer to <%= link_to "Google's documentation", "https://developers.google.com/chart/interactive/docs/gallery/sankey" %> for details on <em>Data Format</em> and <em>Configuration Options</em>. However, <em>Methods</em> and <em>Events</em> are not implemented.
  </p>
</div>
<div class='append-bottom'>
  <hr>
  <h3>Example</h3>
  <div id='chart'></div>
  <%= render_chart @chart, 'chart' %>
</div>
<div class='append-bottom'>
  <hr>
  <h3>Code</h3>
  <div>
    <p>
      In your controller, create the data_table object, set new columns, add row values, then instantiate the chart with configuration options.
    </p>
    <%= codify_ruby do %>
  # https://developers.google.com/chart/interactive/docs/gallery/sankey#a-simple-example
  def sankey

    data_table = GoogleVisualr::DataTable.new
    data_table.new_column('string', 'From')
    data_table.new_column('string', 'To')
    data_table.new_column('number', 'Weight')
    data_table.add_rows(
      [
        ['A', 'X', 5],
        ['A', 'Y', 7],
        ['A', 'Z', 6],
        ['B', 'X', 2],
        ['B', 'Y', 9],
        ['B', 'Z', 4]
      ]
    )

    opts = { width: 600 }
    @chart = GoogleVisualr::Interactive::Sankey.new(data_table, opts)

  end

    <% end %>
  </div>
  <div>
    <p>
      In your view, use the <em>render_chart</em> method to generate <%= link_to "JavasScript", "https://developers.google.com/chart/interactive/docs/gallery/sankey#a-simple-example" %>, during rendering of the view.
    </p>
    <%= codify_html do %>
  <div id='chart'></div>
  <%%= render_chart @chart, 'chart' %>
    <% end %>
  </div>
</div>
